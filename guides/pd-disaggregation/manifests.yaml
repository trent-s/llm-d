---
# Source: llm-d-infra/templates/gateway-infrastructure/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: infra-pd-inference-gateway
  labels: 
    app.kubernetes.io/name: llm-d-infra
    helm.sh/chart: llm-d-infra-v1.3.3
    app.kubernetes.io/instance: infra-pd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/gateway: infra-pd-inference-gateway
    app.kubernetes.io/component: inference-gateway
  annotations:
data:
  deployment: |
    spec:
      template:
        spec:
          containers:
          - name: istio-proxy
            args:
              - proxy
              - router
              - --domain
              - $(POD_NAMESPACE).svc.cluster.local
              - --proxyLogLevel
              - warn
              - --proxyComponentLogLevel
              - misc:warn
              - --log_output_level
              - default:warn
            resources: 
              limits:
                cpu: "2"
                memory: 1Gi
              requests:
                cpu: 100m
                memory: 128Mi
  service: |
    spec:
      type: "ClusterIP"
---
# Source: llm-d-infra/templates/gateway-infrastructure/gateway.yaml
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: infra-pd-inference-gateway
  labels:
    app.kubernetes.io/name: llm-d-infra
    helm.sh/chart: llm-d-infra-v1.3.3
    app.kubernetes.io/instance: infra-pd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/gateway: infra-pd-inference-gateway
    app.kubernetes.io/component: inference-gateway
    istio.io/enable-inference-extproc: "true"
  annotations:
spec:
  gatewayClassName: "istio"
  listeners:
    - port: 80
      protocol: HTTP
      name: default
      allowedRoutes:
        namespaces:
          from: All
  infrastructure:
    parametersRef:
      name: infra-pd-inference-gateway
      group: ""
      kind: ConfigMap
---
# Source: llm-d-infra/templates/gateway-infrastructure/istio-access-log-telemetry.yaml
apiVersion: telemetry.istio.io/v1
kind: Telemetry
metadata:
  name: infra-pd-inference-gateway-telemetry
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: infra-pd-inference-gateway
  accessLogging:
  - providers:
    - name: envoy

---
# Source: inferencepool/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gaie-pd-epp
  namespace: llm-d-pd
  labels:
    app.kubernetes.io/name: gaie-pd-epp
    app.kubernetes.io/version: "v1.0.1-rc.1"
---
# Source: inferencepool/templates/epp-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gaie-pd-epp
  namespace: llm-d-pd
data:
  default-plugins.yaml: |
    apiVersion: inference.networking.x-k8s.io/v1alpha1
    kind: EndpointPickerConfig
    plugins:
    - type: queue-scorer
    - type: kv-cache-utilization-scorer
    - type: prefix-cache-scorer
    schedulingProfiles:
    - name: default
      plugins:
      - pluginRef: queue-scorer
      - pluginRef: kv-cache-utilization-scorer
      - pluginRef: prefix-cache-scorer
  pd-config.yaml: |
    # ALWAYS DO PD IN THIS EXAMPLE (THRESHOLD 0)
    apiVersion: inference.networking.x-k8s.io/v1alpha1
    kind: EndpointPickerConfig
    plugins:
    - type: prefill-header-handler
    - type: prefill-filter
    - type: decode-filter
    - type: max-score-picker
    - type: queue-scorer
      parameters:
        hashBlockSize: 5
        maxPrefixBlocksToMatch: 256
        lruCapacityPerServer: 31250
    - type: pd-profile-handler
      parameters:
        threshold: 0
        hashBlockSize: 5
    schedulingProfiles:
    - name: prefill
      plugins:
      - pluginRef: prefill-filter
      - pluginRef: queue-scorer
        weight: 1.0
      - pluginRef: max-score-picker
    - name: decode
      plugins:
      - pluginRef: decode-filter
      - pluginRef: queue-scorer
        weight: 1.0
      - pluginRef: max-score-picker
---
# Source: inferencepool/templates/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "gaie-pd-llm-d-pd-epp"
  labels:
    app.kubernetes.io/name: gaie-pd-epp
    app.kubernetes.io/version: "v1.0.1-rc.1"
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: inferencepool/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "gaie-pd-llm-d-pd-epp"
subjects:
- kind: ServiceAccount
  name: gaie-pd-epp
  namespace: llm-d-pd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "gaie-pd-llm-d-pd-epp"
---
# Source: inferencepool/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gaie-pd-epp
  namespace: llm-d-pd
  labels:
    app.kubernetes.io/name: gaie-pd-epp
    app.kubernetes.io/version: "v1.0.1-rc.1"
rules:
- apiGroups: ["inference.networking.x-k8s.io"]
  resources: ["inferenceobjectives"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["inference.networking.x-k8s.io"]
  resources: ["inferencepools"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
# Source: inferencepool/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gaie-pd-epp
  namespace: llm-d-pd
subjects:
- kind: ServiceAccount
  name: gaie-pd-epp
  namespace: llm-d-pd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gaie-pd-epp
---
# Source: inferencepool/templates/epp-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: gaie-pd-epp
  namespace: llm-d-pd
  labels:
    app.kubernetes.io/name: gaie-pd-epp
    app.kubernetes.io/version: "v1.0.1-rc.1"
spec:
  selector:
    inferencepool: gaie-pd-epp
  ports:
    - name: grpc-ext-proc
      protocol: TCP
      port: 9002
    - name: http-metrics
      protocol: TCP
      port: 9090
  type: ClusterIP
---
# Source: inferencepool/templates/epp-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gaie-pd-epp
  namespace: llm-d-pd
  labels:
    app.kubernetes.io/name: gaie-pd-epp
    app.kubernetes.io/version: "v1.0.1-rc.1"
spec:
  replicas: 1
  strategy:
    # The current recommended EPP deployment pattern is to have a single active replica. This ensures 
    # optimal performance of the stateful operations such prefix cache aware scorer.
    # The Recreate strategy the old replica is killed immediately, and allow the new replica(s) to 
    # quickly take over. This is particularly important in the high availability set up with leader
    # election, as the rolling update strategy would prevent the old leader being killed because 
    # otherwise the maxUnavailable would be 100%.
    type: Recreate
  selector:
    matchLabels:
      inferencepool: gaie-pd-epp
  template:
    metadata:
      labels:
        inferencepool: gaie-pd-epp
    spec:
      serviceAccountName: gaie-pd-epp
      # Conservatively, this timeout should mirror the longest grace period of the pods within the pool
      terminationGracePeriodSeconds: 130
      containers:
      - name: epp
        image: ghcr.io/llm-d/llm-d-inference-scheduler:v0.3.0
        imagePullPolicy: Always
        args:
        - --pool-name
        - gaie-pd
        - --pool-namespace
        - llm-d-pd
        - --pool-group
        - "inference.networking.x-k8s.io"
        - --zap-encoder
        - "json"
        - --config-file
        - "/config/pd-config.yaml"
        # Pass additional flags via the inferenceExtension.flags field in values.yaml.
        - "--v"
        - "1"
        - "--pool-group"
        - "inference.networking.x-k8s.io"
        ports:
        - name: grpc
          containerPort: 9002
        - name: grpc-health
          containerPort: 9003
        - name: metrics
          containerPort: 9090
        livenessProbe:
          grpc:
            port: 9003
            service: inference-extension
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          grpc:
            port: 9003
            service: inference-extension
          periodSeconds: 2

        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: plugins-config-volume
          mountPath: "/config"
      volumes:
      - name: plugins-config-volume
        configMap:
          name: gaie-pd-epp
---
# Source: inferencepool/templates/istio.yaml
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: gaie-pd-epp
spec:
  host: gaie-pd-epp.llm-d-pd.svc.cluster.local
  trafficPolicy:
    tls:
      mode: SIMPLE
      insecureSkipVerify: true
    connectionPool:
      http:
        http1MaxPendingRequests: 256000
        http2MaxRequests: 256000
        idleTimeout: 900s
        maxRequestsPerConnection: 256000
      tcp:
        connectTimeout: 900s
        maxConnectionDuration: 1800s
        maxConnections: 256000
---
# Source: inferencepool/templates/inferencepool.yaml
apiVersion: inference.networking.x-k8s.io/v1alpha2
kind: InferencePool
metadata:
  name: gaie-pd
  namespace: llm-d-pd
  labels:
    app.kubernetes.io/name: gaie-pd-epp
    app.kubernetes.io/version: "v1.0.1-rc.1"
spec:
  targetPortNumber: 8000
  selector:
    llm-d.ai/inferenceServing: "true"
    llm-d.ai/model: "ms-pd-llm-d-modelservice"
  extensionRef:
    name: gaie-pd-epp
    portNumber: 9002
    failureMode: FailClose

